{"cells":[{"cell_type":"code","execution_count":null,"id":"9d70ab03","metadata":{"id":"9d70ab03"},"outputs":[],"source":["import numpy as np\n","import pandas as pd\n","\n","# For visualization\n","import matplotlib.pyplot as plt\n","%matplotlib inline\n","import seaborn as sns\n","pd.options.display.max_rows = None\n","pd.options.display.max_columns = None"]},{"cell_type":"code","execution_count":null,"id":"a8deae72","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"a8deae72","outputId":"65f35d38-cf11-40d8-9b6a-39f3947de650","executionInfo":{"status":"ok","timestamp":1692027839847,"user_tz":-330,"elapsed":9,"user":{"displayName":"Bijivemula chandra Mohan reddy","userId":"12901537189724530327"}}},"outputs":[{"output_type":"execute_result","data":{"text/plain":["(10000, 14)"]},"metadata":{},"execution_count":2}],"source":["df = pd.read_csv('Churn_Modelling.csv')\n","df.shape"]},{"cell_type":"code","execution_count":null,"id":"49efe07e","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"49efe07e","outputId":"bb641c2b-2fbb-4a20-f443-39c900c74f81","executionInfo":{"status":"ok","timestamp":1692027857268,"user_tz":-330,"elapsed":856,"user":{"displayName":"Bijivemula chandra Mohan reddy","userId":"12901537189724530327"}}},"outputs":[{"output_type":"execute_result","data":{"text/plain":["RowNumber          0\n","CustomerId         0\n","Surname            0\n","CreditScore        0\n","Geography          0\n","Gender             0\n","Age                0\n","Tenure             0\n","Balance            0\n","NumOfProducts      0\n","HasCrCard          0\n","IsActiveMember     0\n","EstimatedSalary    0\n","Exited             0\n","dtype: int64"]},"metadata":{},"execution_count":3}],"source":["# Check columns list and missing values\n","df.isnull().sum()"]},{"cell_type":"code","execution_count":null,"id":"c14f08b1","metadata":{"id":"c14f08b1","outputId":"abdff458-15fe-4670-9d5c-2d39693ee860","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1692027861096,"user_tz":-330,"elapsed":6,"user":{"displayName":"Bijivemula chandra Mohan reddy","userId":"12901537189724530327"}}},"outputs":[{"output_type":"execute_result","data":{"text/plain":["RowNumber          10000\n","CustomerId         10000\n","Surname             2932\n","CreditScore          460\n","Geography              3\n","Gender                 2\n","Age                   70\n","Tenure                11\n","Balance             6382\n","NumOfProducts          4\n","HasCrCard              2\n","IsActiveMember         2\n","EstimatedSalary     9999\n","Exited                 2\n","dtype: int64"]},"metadata":{},"execution_count":4}],"source":["df.nunique()"]},{"cell_type":"code","execution_count":null,"id":"02ce19f2","metadata":{"id":"02ce19f2","outputId":"eb04a9c4-6a42-469e-cc3f-997d9f16c61c","colab":{"base_uri":"https://localhost:8080/","height":270},"executionInfo":{"status":"ok","timestamp":1692027864809,"user_tz":-330,"elapsed":8,"user":{"displayName":"Bijivemula chandra Mohan reddy","userId":"12901537189724530327"}}},"outputs":[{"output_type":"execute_result","data":{"text/plain":["   CreditScore Geography  Gender  Age  Tenure    Balance  NumOfProducts  \\\n","0          619    France  Female   42       2       0.00              1   \n","1          608     Spain  Female   41       1   83807.86              1   \n","2          502    France  Female   42       8  159660.80              3   \n","3          699    France  Female   39       1       0.00              2   \n","4          850     Spain  Female   43       2  125510.82              1   \n","\n","   HasCrCard  IsActiveMember  EstimatedSalary  Exited  \n","0          1               1        101348.88       1  \n","1          0               1        112542.58       0  \n","2          1               0        113931.57       1  \n","3          0               0         93826.63       0  \n","4          1               1         79084.10       0  "],"text/html":["\n","\n","  <div id=\"df-0fb96481-c7df-4017-bc42-500245c372c9\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>CreditScore</th>\n","      <th>Geography</th>\n","      <th>Gender</th>\n","      <th>Age</th>\n","      <th>Tenure</th>\n","      <th>Balance</th>\n","      <th>NumOfProducts</th>\n","      <th>HasCrCard</th>\n","      <th>IsActiveMember</th>\n","      <th>EstimatedSalary</th>\n","      <th>Exited</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>619</td>\n","      <td>France</td>\n","      <td>Female</td>\n","      <td>42</td>\n","      <td>2</td>\n","      <td>0.00</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>101348.88</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>608</td>\n","      <td>Spain</td>\n","      <td>Female</td>\n","      <td>41</td>\n","      <td>1</td>\n","      <td>83807.86</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>112542.58</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>502</td>\n","      <td>France</td>\n","      <td>Female</td>\n","      <td>42</td>\n","      <td>8</td>\n","      <td>159660.80</td>\n","      <td>3</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>113931.57</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>699</td>\n","      <td>France</td>\n","      <td>Female</td>\n","      <td>39</td>\n","      <td>1</td>\n","      <td>0.00</td>\n","      <td>2</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>93826.63</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>850</td>\n","      <td>Spain</td>\n","      <td>Female</td>\n","      <td>43</td>\n","      <td>2</td>\n","      <td>125510.82</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>79084.10</td>\n","      <td>0</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-0fb96481-c7df-4017-bc42-500245c372c9')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","\n","\n","\n","    <div id=\"df-d8b54017-eb78-4e92-8cbe-72c7ffbc5c25\">\n","      <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-d8b54017-eb78-4e92-8cbe-72c7ffbc5c25')\"\n","              title=\"Suggest charts.\"\n","              style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","      </button>\n","    </div>\n","\n","<style>\n","  .colab-df-quickchart {\n","    background-color: #E8F0FE;\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: #1967D2;\n","    height: 32px;\n","    padding: 0 0 0 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: #E2EBFA;\n","    box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: #174EA6;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","    background-color: #3B4455;\n","    fill: #D2E3FC;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart:hover {\n","    background-color: #434B5C;\n","    box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","    filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","    fill: #FFFFFF;\n","  }\n","</style>\n","\n","    <script>\n","      async function quickchart(key) {\n","        const containerElement = document.querySelector('#' + key);\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      }\n","    </script>\n","\n","      <script>\n","\n","function displayQuickchartButton(domScope) {\n","  let quickchartButtonEl =\n","    domScope.querySelector('#df-d8b54017-eb78-4e92-8cbe-72c7ffbc5c25 button.colab-df-quickchart');\n","  quickchartButtonEl.style.display =\n","    google.colab.kernel.accessAllowed ? 'block' : 'none';\n","}\n","\n","        displayQuickchartButton(document);\n","      </script>\n","      <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-0fb96481-c7df-4017-bc42-500245c372c9 button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-0fb96481-c7df-4017-bc42-500245c372c9');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n"]},"metadata":{},"execution_count":5}],"source":["df = df.drop([\"RowNumber\", \"CustomerId\", \"Surname\"], axis = 1)\n","# Review the top rows of what is left of the data frame\n","df.head()"]},{"cell_type":"code","execution_count":null,"id":"ef3110fc","metadata":{"id":"ef3110fc","outputId":"553ff2c1-f757-44da-fffb-e5786c7ba219","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1692027868622,"user_tz":-330,"elapsed":6,"user":{"displayName":"Bijivemula chandra Mohan reddy","userId":"12901537189724530327"}}},"outputs":[{"output_type":"execute_result","data":{"text/plain":["CreditScore          int64\n","Geography           object\n","Gender              object\n","Age                  int64\n","Tenure               int64\n","Balance            float64\n","NumOfProducts        int64\n","HasCrCard            int64\n","IsActiveMember       int64\n","EstimatedSalary    float64\n","Exited               int64\n","dtype: object"]},"metadata":{},"execution_count":6}],"source":["# Check variable data types\n","df.dtypes"]},{"cell_type":"code","execution_count":null,"id":"34e16eaf","metadata":{"id":"34e16eaf","outputId":"f5e547c5-cdc4-444b-c50d-1357ec946e91","colab":{"base_uri":"https://localhost:8080/","height":683},"executionInfo":{"status":"ok","timestamp":1692027873027,"user_tz":-330,"elapsed":11,"user":{"displayName":"Bijivemula chandra Mohan reddy","userId":"12901537189724530327"}}},"outputs":[{"output_type":"display_data","data":{"text/plain":["<Figure size 1000x800 with 1 Axes>"],"image/png":"\n"},"metadata":{}}],"source":["labels = 'Exited', 'Active'\n","sizes = [df.Exited[df['Exited']==1].count(), df.Exited[df['Exited']==0].count()]\n","explode = (0, 0.1)\n","fig1, ax1 = plt.subplots(figsize=(10, 8))\n","ax1.pie(sizes, explode=explode, labels=labels, autopct='%1.1f%%',\n","        shadow=True, startangle=90)\n","ax1.axis('equal')\n","plt.title(\"Proportion of customer churned and active\", size = 20)\n","plt.show()"]},{"cell_type":"code","execution_count":null,"id":"1a86d8b0","metadata":{"id":"1a86d8b0","outputId":"2c215d7f-e469-4d71-9d70-d0b61712268b","colab":{"base_uri":"https://localhost:8080/","height":606},"executionInfo":{"status":"ok","timestamp":1692027880881,"user_tz":-330,"elapsed":2002,"user":{"displayName":"Bijivemula chandra Mohan reddy","userId":"12901537189724530327"}}},"outputs":[{"output_type":"execute_result","data":{"text/plain":["<Axes: xlabel='IsActiveMember', ylabel='count'>"]},"metadata":{},"execution_count":8},{"output_type":"display_data","data":{"text/plain":["<Figure size 2000x1200 with 4 Axes>"],"image/png":"\n"},"metadata":{}}],"source":["fig, axarr = plt.subplots(2, 2, figsize=(20, 12))\n","sns.countplot(x='Geography', hue = 'Exited',data = df, ax=axarr[0][0])\n","sns.countplot(x='Gender', hue = 'Exited',data = df, ax=axarr[0][1])\n","sns.countplot(x='HasCrCard', hue = 'Exited',data = df, ax=axarr[1][0])\n","sns.countplot(x='IsActiveMember', hue = 'Exited',data = df, ax=axarr[1][1])"]},{"cell_type":"code","execution_count":null,"id":"03c5c2eb","metadata":{"id":"03c5c2eb","outputId":"6defadf8-20e4-4698-cf57-c7250f3ac95e","colab":{"base_uri":"https://localhost:8080/","height":482},"executionInfo":{"status":"ok","timestamp":1692027886711,"user_tz":-330,"elapsed":1733,"user":{"displayName":"Bijivemula chandra Mohan reddy","userId":"12901537189724530327"}}},"outputs":[{"output_type":"execute_result","data":{"text/plain":["<Axes: xlabel='Exited', ylabel='EstimatedSalary'>"]},"metadata":{},"execution_count":9},{"output_type":"display_data","data":{"text/plain":["<Figure size 1000x500 with 6 Axes>"],"image/png":"\n"},"metadata":{}}],"source":["fig, axarr = plt.subplots(3, 2, figsize=(10, 5))\n","sns.boxplot(y='CreditScore',x = 'Exited', hue = 'Exited',data = df, ax=axarr[0][0])\n","sns.boxplot(y='Age',x = 'Exited', hue = 'Exited',data = df , ax=axarr[0][1])\n","sns.boxplot(y='Tenure',x = 'Exited', hue = 'Exited',data = df, ax=axarr[1][0])\n","sns.boxplot(y='Balance',x = 'Exited', hue = 'Exited',data = df, ax=axarr[1][1])\n","sns.boxplot(y='NumOfProducts',x = 'Exited', hue = 'Exited',data = df, ax=axarr[2][0])\n","sns.boxplot(y='EstimatedSalary',x = 'Exited', hue = 'Exited',data = df, ax=axarr[2][1])\n"]},{"cell_type":"code","execution_count":null,"id":"843937f6","metadata":{"id":"843937f6","outputId":"16123818-6dd6-44c1-fda7-f3a9fa153166","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1692027894214,"user_tz":-330,"elapsed":6,"user":{"displayName":"Bijivemula chandra Mohan reddy","userId":"12901537189724530327"}}},"outputs":[{"output_type":"stream","name":"stdout","text":["8000\n","2000\n"]}],"source":["# Split Train, test data\n","df_train = df.sample(frac=0.8,random_state=200)\n","df_test = df.drop(df_train.index)\n","print(len(df_train))\n","print(len(df_test))"]},{"cell_type":"code","execution_count":null,"id":"5259800a","metadata":{"id":"5259800a","outputId":"c1dd98c6-0cf3-4b30-c7eb-45cebdb2c6c9","colab":{"base_uri":"https://localhost:8080/","height":472},"executionInfo":{"status":"ok","timestamp":1692027897955,"user_tz":-330,"elapsed":1558,"user":{"displayName":"Bijivemula chandra Mohan reddy","userId":"12901537189724530327"}}},"outputs":[{"output_type":"execute_result","data":{"text/plain":["(-1.0, 5.0)"]},"metadata":{},"execution_count":11},{"output_type":"display_data","data":{"text/plain":["<Figure size 640x480 with 1 Axes>"],"image/png":"\n"},"metadata":{}}],"source":["df_train['BalanceSalaryRatio'] = df_train.Balance/df_train.EstimatedSalary\n","sns.boxplot(y='BalanceSalaryRatio',x = 'Exited', hue = 'Exited',data = df_train)\n","plt.ylim(-1, 5)"]},{"cell_type":"code","execution_count":null,"id":"d5d25b53","metadata":{"id":"d5d25b53","outputId":"c0305b8d-39a9-4d1b-ebe3-83ecbe1b8d27","colab":{"base_uri":"https://localhost:8080/","height":455},"executionInfo":{"status":"ok","timestamp":1692027905343,"user_tz":-330,"elapsed":1040,"user":{"displayName":"Bijivemula chandra Mohan reddy","userId":"12901537189724530327"}}},"outputs":[{"output_type":"display_data","data":{"text/plain":["<Figure size 640x480 with 1 Axes>"],"image/png":"\n"},"metadata":{}}],"source":["# Given that tenure is a 'function' of age, we introduce a variable aiming to standardize tenure over age:\n","df_train['TenureByAge'] = df_train.Tenure/(df_train.Age)\n","sns.boxplot(y='TenureByAge',x = 'Exited', hue = 'Exited',data = df_train)\n","plt.ylim(-1, 1)\n","plt.show()"]},{"cell_type":"code","execution_count":null,"id":"b0e9e2ae","metadata":{"id":"b0e9e2ae"},"outputs":[],"source":["df_train['CreditScoreGivenAge'] = df_train.CreditScore/(df_train.Age)"]},{"cell_type":"code","execution_count":null,"id":"5d816124","metadata":{"id":"5d816124","outputId":"cb645623-9b07-432d-804a-e2382065e0ce","colab":{"base_uri":"https://localhost:8080/","height":270},"executionInfo":{"status":"ok","timestamp":1692027909333,"user_tz":-330,"elapsed":13,"user":{"displayName":"Bijivemula chandra Mohan reddy","userId":"12901537189724530327"}}},"outputs":[{"output_type":"execute_result","data":{"text/plain":["      CreditScore Geography  Gender  Age  Tenure    Balance  NumOfProducts  \\\n","8159          461     Spain  Female   25       6       0.00              2   \n","6332          619    France  Female   35       4   90413.12              1   \n","8895          699    France  Female   40       8  122038.34              1   \n","5351          558   Germany    Male   41       2  124227.14              1   \n","4314          638    France    Male   34       5  133501.36              1   \n","\n","      HasCrCard  IsActiveMember  EstimatedSalary  Exited  BalanceSalaryRatio  \\\n","8159          1               1         15306.29       0            0.000000   \n","6332          1               1         20555.21       0            4.398550   \n","8895          1               0        102085.35       0            1.195454   \n","5351          1               1        111184.67       0            1.117305   \n","4314          0               1        155643.04       0            0.857741   \n","\n","      TenureByAge  CreditScoreGivenAge  \n","8159     0.240000            18.440000  \n","6332     0.114286            17.685714  \n","8895     0.200000            17.475000  \n","5351     0.048780            13.609756  \n","4314     0.147059            18.764706  "],"text/html":["\n","\n","  <div id=\"df-94f81cbf-d340-4204-90df-c57d49a8cf28\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>CreditScore</th>\n","      <th>Geography</th>\n","      <th>Gender</th>\n","      <th>Age</th>\n","      <th>Tenure</th>\n","      <th>Balance</th>\n","      <th>NumOfProducts</th>\n","      <th>HasCrCard</th>\n","      <th>IsActiveMember</th>\n","      <th>EstimatedSalary</th>\n","      <th>Exited</th>\n","      <th>BalanceSalaryRatio</th>\n","      <th>TenureByAge</th>\n","      <th>CreditScoreGivenAge</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>8159</th>\n","      <td>461</td>\n","      <td>Spain</td>\n","      <td>Female</td>\n","      <td>25</td>\n","      <td>6</td>\n","      <td>0.00</td>\n","      <td>2</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>15306.29</td>\n","      <td>0</td>\n","      <td>0.000000</td>\n","      <td>0.240000</td>\n","      <td>18.440000</td>\n","    </tr>\n","    <tr>\n","      <th>6332</th>\n","      <td>619</td>\n","      <td>France</td>\n","      <td>Female</td>\n","      <td>35</td>\n","      <td>4</td>\n","      <td>90413.12</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>20555.21</td>\n","      <td>0</td>\n","      <td>4.398550</td>\n","      <td>0.114286</td>\n","      <td>17.685714</td>\n","    </tr>\n","    <tr>\n","      <th>8895</th>\n","      <td>699</td>\n","      <td>France</td>\n","      <td>Female</td>\n","      <td>40</td>\n","      <td>8</td>\n","      <td>122038.34</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>102085.35</td>\n","      <td>0</td>\n","      <td>1.195454</td>\n","      <td>0.200000</td>\n","      <td>17.475000</td>\n","    </tr>\n","    <tr>\n","      <th>5351</th>\n","      <td>558</td>\n","      <td>Germany</td>\n","      <td>Male</td>\n","      <td>41</td>\n","      <td>2</td>\n","      <td>124227.14</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>111184.67</td>\n","      <td>0</td>\n","      <td>1.117305</td>\n","      <td>0.048780</td>\n","      <td>13.609756</td>\n","    </tr>\n","    <tr>\n","      <th>4314</th>\n","      <td>638</td>\n","      <td>France</td>\n","      <td>Male</td>\n","      <td>34</td>\n","      <td>5</td>\n","      <td>133501.36</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>155643.04</td>\n","      <td>0</td>\n","      <td>0.857741</td>\n","      <td>0.147059</td>\n","      <td>18.764706</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-94f81cbf-d340-4204-90df-c57d49a8cf28')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","\n","\n","\n","    <div id=\"df-b7b25b99-b2f0-4631-b7df-e58427b0f8be\">\n","      <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-b7b25b99-b2f0-4631-b7df-e58427b0f8be')\"\n","              title=\"Suggest charts.\"\n","              style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","      </button>\n","    </div>\n","\n","<style>\n","  .colab-df-quickchart {\n","    background-color: #E8F0FE;\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: #1967D2;\n","    height: 32px;\n","    padding: 0 0 0 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: #E2EBFA;\n","    box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: #174EA6;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","    background-color: #3B4455;\n","    fill: #D2E3FC;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart:hover {\n","    background-color: #434B5C;\n","    box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","    filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","    fill: #FFFFFF;\n","  }\n","</style>\n","\n","    <script>\n","      async function quickchart(key) {\n","        const containerElement = document.querySelector('#' + key);\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      }\n","    </script>\n","\n","      <script>\n","\n","function displayQuickchartButton(domScope) {\n","  let quickchartButtonEl =\n","    domScope.querySelector('#df-b7b25b99-b2f0-4631-b7df-e58427b0f8be button.colab-df-quickchart');\n","  quickchartButtonEl.style.display =\n","    google.colab.kernel.accessAllowed ? 'block' : 'none';\n","}\n","\n","        displayQuickchartButton(document);\n","      </script>\n","      <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-94f81cbf-d340-4204-90df-c57d49a8cf28 button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-94f81cbf-d340-4204-90df-c57d49a8cf28');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n"]},"metadata":{},"execution_count":14}],"source":["# Resulting Data Frame\n","df_train.head()"]},{"cell_type":"code","execution_count":null,"id":"1044345a","metadata":{"id":"1044345a"},"outputs":[],"source":["\n","continuous_vars = ['CreditScore',  'Age', 'Tenure', 'Balance','NumOfProducts', 'EstimatedSalary',\n","                   'TenureByAge','CreditScoreGivenAge']\n"]},{"cell_type":"code","source":["cat_vars = ['HasCrCard', 'IsActiveMember','Geography', 'Gender']\n"],"metadata":{"id":"JIVNhql8C22h"},"id":"JIVNhql8C22h","execution_count":null,"outputs":[]},{"cell_type":"code","source":["df_train = df_train[['Exited'] + continuous_vars  ]\n"],"metadata":{"id":"qUv171RKC8Py"},"id":"qUv171RKC8Py","execution_count":null,"outputs":[]},{"cell_type":"code","source":["df_train.head()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":250},"id":"xgCMiTY2DAVX","outputId":"0d692c86-5691-4081-c1e6-095542168dcb","executionInfo":{"status":"ok","timestamp":1692027917841,"user_tz":-330,"elapsed":12,"user":{"displayName":"Bijivemula chandra Mohan reddy","userId":"12901537189724530327"}}},"id":"xgCMiTY2DAVX","execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["      Exited  CreditScore  Age  Tenure    Balance  NumOfProducts  \\\n","8159       0          461   25       6       0.00              2   \n","6332       0          619   35       4   90413.12              1   \n","8895       0          699   40       8  122038.34              1   \n","5351       0          558   41       2  124227.14              1   \n","4314       0          638   34       5  133501.36              1   \n","\n","      EstimatedSalary  TenureByAge  CreditScoreGivenAge  \n","8159         15306.29     0.240000            18.440000  \n","6332         20555.21     0.114286            17.685714  \n","8895        102085.35     0.200000            17.475000  \n","5351        111184.67     0.048780            13.609756  \n","4314        155643.04     0.147059            18.764706  "],"text/html":["\n","\n","  <div id=\"df-a030dd67-10bd-42ff-8e20-c89e108c218f\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Exited</th>\n","      <th>CreditScore</th>\n","      <th>Age</th>\n","      <th>Tenure</th>\n","      <th>Balance</th>\n","      <th>NumOfProducts</th>\n","      <th>EstimatedSalary</th>\n","      <th>TenureByAge</th>\n","      <th>CreditScoreGivenAge</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>8159</th>\n","      <td>0</td>\n","      <td>461</td>\n","      <td>25</td>\n","      <td>6</td>\n","      <td>0.00</td>\n","      <td>2</td>\n","      <td>15306.29</td>\n","      <td>0.240000</td>\n","      <td>18.440000</td>\n","    </tr>\n","    <tr>\n","      <th>6332</th>\n","      <td>0</td>\n","      <td>619</td>\n","      <td>35</td>\n","      <td>4</td>\n","      <td>90413.12</td>\n","      <td>1</td>\n","      <td>20555.21</td>\n","      <td>0.114286</td>\n","      <td>17.685714</td>\n","    </tr>\n","    <tr>\n","      <th>8895</th>\n","      <td>0</td>\n","      <td>699</td>\n","      <td>40</td>\n","      <td>8</td>\n","      <td>122038.34</td>\n","      <td>1</td>\n","      <td>102085.35</td>\n","      <td>0.200000</td>\n","      <td>17.475000</td>\n","    </tr>\n","    <tr>\n","      <th>5351</th>\n","      <td>0</td>\n","      <td>558</td>\n","      <td>41</td>\n","      <td>2</td>\n","      <td>124227.14</td>\n","      <td>1</td>\n","      <td>111184.67</td>\n","      <td>0.048780</td>\n","      <td>13.609756</td>\n","    </tr>\n","    <tr>\n","      <th>4314</th>\n","      <td>0</td>\n","      <td>638</td>\n","      <td>34</td>\n","      <td>5</td>\n","      <td>133501.36</td>\n","      <td>1</td>\n","      <td>155643.04</td>\n","      <td>0.147059</td>\n","      <td>18.764706</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-a030dd67-10bd-42ff-8e20-c89e108c218f')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","\n","\n","\n","    <div id=\"df-9856e324-eca4-4757-8aa4-daa6723be903\">\n","      <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-9856e324-eca4-4757-8aa4-daa6723be903')\"\n","              title=\"Suggest charts.\"\n","              style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","      </button>\n","    </div>\n","\n","<style>\n","  .colab-df-quickchart {\n","    background-color: #E8F0FE;\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: #1967D2;\n","    height: 32px;\n","    padding: 0 0 0 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: #E2EBFA;\n","    box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: #174EA6;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","    background-color: #3B4455;\n","    fill: #D2E3FC;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart:hover {\n","    background-color: #434B5C;\n","    box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","    filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","    fill: #FFFFFF;\n","  }\n","</style>\n","\n","    <script>\n","      async function quickchart(key) {\n","        const containerElement = document.querySelector('#' + key);\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      }\n","    </script>\n","\n","      <script>\n","\n","function displayQuickchartButton(domScope) {\n","  let quickchartButtonEl =\n","    domScope.querySelector('#df-9856e324-eca4-4757-8aa4-daa6723be903 button.colab-df-quickchart');\n","  quickchartButtonEl.style.display =\n","    google.colab.kernel.accessAllowed ? 'block' : 'none';\n","}\n","\n","        displayQuickchartButton(document);\n","      </script>\n","      <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-a030dd67-10bd-42ff-8e20-c89e108c218f button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-a030dd67-10bd-42ff-8e20-c89e108c218f');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n"]},"metadata":{},"execution_count":18}]},{"cell_type":"code","execution_count":null,"id":"256915f0","metadata":{"id":"256915f0","outputId":"4f5c7d9e-71cb-4cd5-cc2a-7a8e510e026f","colab":{"base_uri":"https://localhost:8080/","height":250},"executionInfo":{"status":"ok","timestamp":1692027934455,"user_tz":-330,"elapsed":650,"user":{"displayName":"Bijivemula chandra Mohan reddy","userId":"12901537189724530327"}}},"outputs":[{"output_type":"execute_result","data":{"text/plain":["      Exited  CreditScore       Age  Tenure   Balance  NumOfProducts  \\\n","8159       0        0.222  0.094595     0.6  0.000000       0.333333   \n","6332       0        0.538  0.229730     0.4  0.360358       0.000000   \n","8895       0        0.698  0.297297     0.8  0.486406       0.000000   \n","5351       0        0.416  0.310811     0.2  0.495130       0.000000   \n","4314       0        0.576  0.216216     0.5  0.532094       0.000000   \n","\n","      EstimatedSalary  TenureByAge  CreditScoreGivenAge  \n","8159         0.076118     0.432000             0.323157  \n","6332         0.102376     0.205714             0.305211  \n","8895         0.510225     0.360000             0.300198  \n","5351         0.555744     0.087805             0.208238  \n","4314         0.778145     0.264706             0.330882  "],"text/html":["\n","\n","  <div id=\"df-38223b7c-516d-4962-8610-153860dca33c\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Exited</th>\n","      <th>CreditScore</th>\n","      <th>Age</th>\n","      <th>Tenure</th>\n","      <th>Balance</th>\n","      <th>NumOfProducts</th>\n","      <th>EstimatedSalary</th>\n","      <th>TenureByAge</th>\n","      <th>CreditScoreGivenAge</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>8159</th>\n","      <td>0</td>\n","      <td>0.222</td>\n","      <td>0.094595</td>\n","      <td>0.6</td>\n","      <td>0.000000</td>\n","      <td>0.333333</td>\n","      <td>0.076118</td>\n","      <td>0.432000</td>\n","      <td>0.323157</td>\n","    </tr>\n","    <tr>\n","      <th>6332</th>\n","      <td>0</td>\n","      <td>0.538</td>\n","      <td>0.229730</td>\n","      <td>0.4</td>\n","      <td>0.360358</td>\n","      <td>0.000000</td>\n","      <td>0.102376</td>\n","      <td>0.205714</td>\n","      <td>0.305211</td>\n","    </tr>\n","    <tr>\n","      <th>8895</th>\n","      <td>0</td>\n","      <td>0.698</td>\n","      <td>0.297297</td>\n","      <td>0.8</td>\n","      <td>0.486406</td>\n","      <td>0.000000</td>\n","      <td>0.510225</td>\n","      <td>0.360000</td>\n","      <td>0.300198</td>\n","    </tr>\n","    <tr>\n","      <th>5351</th>\n","      <td>0</td>\n","      <td>0.416</td>\n","      <td>0.310811</td>\n","      <td>0.2</td>\n","      <td>0.495130</td>\n","      <td>0.000000</td>\n","      <td>0.555744</td>\n","      <td>0.087805</td>\n","      <td>0.208238</td>\n","    </tr>\n","    <tr>\n","      <th>4314</th>\n","      <td>0</td>\n","      <td>0.576</td>\n","      <td>0.216216</td>\n","      <td>0.5</td>\n","      <td>0.532094</td>\n","      <td>0.000000</td>\n","      <td>0.778145</td>\n","      <td>0.264706</td>\n","      <td>0.330882</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-38223b7c-516d-4962-8610-153860dca33c')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","\n","\n","\n","    <div id=\"df-e31cae09-8905-4d2c-9ae0-7c3f1d464cf8\">\n","      <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-e31cae09-8905-4d2c-9ae0-7c3f1d464cf8')\"\n","              title=\"Suggest charts.\"\n","              style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","      </button>\n","    </div>\n","\n","<style>\n","  .colab-df-quickchart {\n","    background-color: #E8F0FE;\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: #1967D2;\n","    height: 32px;\n","    padding: 0 0 0 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: #E2EBFA;\n","    box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: #174EA6;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","    background-color: #3B4455;\n","    fill: #D2E3FC;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart:hover {\n","    background-color: #434B5C;\n","    box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","    filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","    fill: #FFFFFF;\n","  }\n","</style>\n","\n","    <script>\n","      async function quickchart(key) {\n","        const containerElement = document.querySelector('#' + key);\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      }\n","    </script>\n","\n","      <script>\n","\n","function displayQuickchartButton(domScope) {\n","  let quickchartButtonEl =\n","    domScope.querySelector('#df-e31cae09-8905-4d2c-9ae0-7c3f1d464cf8 button.colab-df-quickchart');\n","  quickchartButtonEl.style.display =\n","    google.colab.kernel.accessAllowed ? 'block' : 'none';\n","}\n","\n","        displayQuickchartButton(document);\n","      </script>\n","      <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-38223b7c-516d-4962-8610-153860dca33c button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-38223b7c-516d-4962-8610-153860dca33c');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n"]},"metadata":{},"execution_count":19}],"source":["# minMax scaling the continuous variables\n","minVec = df_train[continuous_vars].min().copy()\n","maxVec = df_train[continuous_vars].max().copy()\n","df_train[continuous_vars] = (df_train[continuous_vars]-minVec)/(maxVec-minVec)\n","df_train.head()"]},{"cell_type":"code","execution_count":null,"id":"d1d67c8f","metadata":{"id":"d1d67c8f"},"outputs":[],"source":["# data prep pipeline for test data\n","def DfPrepPipeline(df_predict,df_train_Cols,minVec,maxVec):\n","    # Add new features\n","    df_predict['BalanceSalaryRatio'] = df_predict.Balance/df_predict.EstimatedSalary\n","    df_predict['TenureByAge'] = df_predict.Tenure/(df_predict.Age - 18)\n","    df_predict['CreditScoreGivenAge'] = df_predict.CreditScore/(df_predict.Age - 18)\n","    # Reorder the columns\n","    continuous_vars = ['CreditScore','Age','Tenure','Balance','NumOfProducts','EstimatedSalary','BalanceSalaryRatio',\n","                   'TenureByAge','CreditScoreGivenAge']\n","    cat_vars = ['HasCrCard','IsActiveMember',\"Geography\", \"Gender\"]\n","    df_predict = df_predict[['Exited'] + continuous_vars + cat_vars]\n","    # Change the 0 in categorical variables to -1\n","    df_predict.loc[df_predict.HasCrCard == 0, 'HasCrCard'] = -1\n","    df_predict.loc[df_predict.IsActiveMember == 0, 'IsActiveMember'] = -1\n","    # One hot encode the categorical variables\n","    lst = [\"Geography\", \"Gender\"]\n","    remove = list()\n","    for i in lst:\n","        for j in df_predict[i].unique():\n","            df_predict[i+'_'+j] = np.where(df_predict[i] == j,1,-1)\n","        remove.append(i)\n","    df_predict = df_predict.drop(remove, axis=1)\n","    # Ensure that all one hot encoded variables that appear in the train data appear in the subsequent data\n","    L = list(set(df_train_Cols) - set(df_predict.columns))\n","    for l in L:\n","        df_predict[str(l)] = -1\n","    # MinMax scaling coontinuous variables based on min and max from the train data\n","    df_predict[continuous_vars] = (df_predict[continuous_vars]-minVec)/(maxVec-minVec)\n","    # Ensure that The variables are ordered in the same way as was ordered in the train set\n","    df_predict = df_predict[df_train_Cols]\n","    return df_predict"]},{"cell_type":"code","execution_count":null,"id":"86b7097e","metadata":{"id":"86b7097e"},"outputs":[],"source":["from sklearn.preprocessing import PolynomialFeatures\n","from sklearn.model_selection import cross_val_score\n","from sklearn.model_selection import GridSearchCV\n","from scipy.stats import uniform\n","\n","# Fit models\n","from sklearn.linear_model import LogisticRegression\n","from sklearn.svm import SVC\n","from sklearn.ensemble import RandomForestClassifier\n","from xgboost import XGBClassifier\n","\n","# Scoring functions\n","from sklearn.metrics import accuracy_score\n","from sklearn.metrics import classification_report\n","from sklearn.metrics import roc_auc_score\n","from sklearn.metrics import roc_curve\n","from sklearn.impute import SimpleImputer\n","# Function to give best model score and parameters\n","def best_model(model):\n","    print(model.best_score_)\n","    print(model.best_params_)\n","    print(model.best_estimator_)\n","def get_auc_scores(y_actual, method,method2):\n","    auc_score = roc_auc_score(y_actual, method);\n","    fpr_df, tpr_df, _ = roc_curve(y_actual, method2);\n","    return (auc_score, fpr_df, tpr_df)"]},{"cell_type":"code","execution_count":null,"id":"28dd2642","metadata":{"id":"28dd2642"},"outputs":[],"source":["# Function to give best model score and parameters\n","def best_model(model):\n","    print(model.best_score_)\n","    print(model.best_params_)\n","    print(model.best_estimator_)\n","def get_auc_scores(y_actual, method,method2):\n","    auc_score = roc_auc_score(y_actual, method);\n","    fpr_df, tpr_df, _ = roc_curve(y_actual, method2);\n","    return (auc_score, fpr_df, tpr_df)"]},{"cell_type":"code","execution_count":null,"id":"c49c679f","metadata":{"colab":{"base_uri":"https://localhost:8080/","height":74},"id":"c49c679f","outputId":"eb9e9f5e-dfeb-49ad-a397-6f16592a3705","executionInfo":{"status":"ok","timestamp":1692027948276,"user_tz":-330,"elapsed":812,"user":{"displayName":"Bijivemula chandra Mohan reddy","userId":"12901537189724530327"}}},"outputs":[{"output_type":"execute_result","data":{"text/plain":["LogisticRegression(C=100, max_iter=250, multi_class='multinomial', tol=1e-05)"],"text/html":["<style>#sk-container-id-1 {color: black;background-color: white;}#sk-container-id-1 pre{padding: 0;}#sk-container-id-1 div.sk-toggleable {background-color: white;}#sk-container-id-1 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-container-id-1 label.sk-toggleable__label-arrow:before {content: \"▸\";float: left;margin-right: 0.25em;color: #696969;}#sk-container-id-1 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-container-id-1 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-container-id-1 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-container-id-1 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-container-id-1 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-container-id-1 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: \"▾\";}#sk-container-id-1 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-1 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-1 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-container-id-1 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-container-id-1 div.sk-estimator:hover {background-color: #d4ebff;}#sk-container-id-1 div.sk-parallel-item::after {content: \"\";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-container-id-1 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-1 div.sk-serial::before {content: \"\";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 0;bottom: 0;left: 50%;z-index: 0;}#sk-container-id-1 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;position: relative;}#sk-container-id-1 div.sk-item {position: relative;z-index: 1;}#sk-container-id-1 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;position: relative;}#sk-container-id-1 div.sk-item::before, #sk-container-id-1 div.sk-parallel-item::before {content: \"\";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 0;bottom: 0;left: 50%;z-index: -1;}#sk-container-id-1 div.sk-parallel-item {display: flex;flex-direction: column;z-index: 1;position: relative;background-color: white;}#sk-container-id-1 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-container-id-1 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-container-id-1 div.sk-parallel-item:only-child::after {width: 0;}#sk-container-id-1 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;}#sk-container-id-1 div.sk-label label {font-family: monospace;font-weight: bold;display: inline-block;line-height: 1.2em;}#sk-container-id-1 div.sk-label-container {text-align: center;}#sk-container-id-1 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-container-id-1 div.sk-text-repr-fallback {display: none;}</style><div id=\"sk-container-id-1\" class=\"sk-top-container\"><div class=\"sk-text-repr-fallback\"><pre>LogisticRegression(C=100, max_iter=250, multi_class=&#x27;multinomial&#x27;, tol=1e-05)</pre><b>In a Jupyter environment, please rerun this cell to show the HTML representation or trust the notebook. <br />On GitHub, the HTML representation is unable to render, please try loading this page with nbviewer.org.</b></div><div class=\"sk-container\" hidden><div class=\"sk-item\"><div class=\"sk-estimator sk-toggleable\"><input class=\"sk-toggleable__control sk-hidden--visually\" id=\"sk-estimator-id-1\" type=\"checkbox\" checked><label for=\"sk-estimator-id-1\" class=\"sk-toggleable__label sk-toggleable__label-arrow\">LogisticRegression</label><div class=\"sk-toggleable__content\"><pre>LogisticRegression(C=100, max_iter=250, multi_class=&#x27;multinomial&#x27;, tol=1e-05)</pre></div></div></div></div></div>"]},"metadata":{},"execution_count":23}],"source":["# Fit primal logistic regression\n","log_primal = LogisticRegression(C=100, class_weight=None, dual=False, fit_intercept=True,intercept_scaling=1, max_iter=250, multi_class='multinomial',n_jobs=None,\n","                                penalty='l2', random_state=None, solver='lbfgs',tol=1e-05, verbose=0, warm_start=False)\n","log_primal.fit(df_train.loc[:, df_train.columns != 'Exited'],df_train.Exited)"]},{"cell_type":"code","execution_count":null,"id":"7850f29f","metadata":{"colab":{"base_uri":"https://localhost:8080/","height":233},"id":"7850f29f","outputId":"9bd13395-9cd2-4332-c418-8bcc719a4f3a","executionInfo":{"status":"ok","timestamp":1692027950180,"user_tz":-330,"elapsed":686,"user":{"displayName":"Bijivemula chandra Mohan reddy","userId":"12901537189724530327"}}},"outputs":[{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.10/dist-packages/sklearn/linear_model/_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):\n","STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.\n","\n","Increase the number of iterations (max_iter) or scale the data as shown in:\n","    https://scikit-learn.org/stable/modules/preprocessing.html\n","Please also refer to the documentation for alternative solver options:\n","    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression\n","  n_iter_i = _check_optimize_result(\n"]},{"output_type":"execute_result","data":{"text/plain":["LogisticRegression(C=10, max_iter=300, multi_class='multinomial')"],"text/html":["<style>#sk-container-id-2 {color: black;background-color: white;}#sk-container-id-2 pre{padding: 0;}#sk-container-id-2 div.sk-toggleable {background-color: white;}#sk-container-id-2 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-container-id-2 label.sk-toggleable__label-arrow:before {content: \"▸\";float: left;margin-right: 0.25em;color: #696969;}#sk-container-id-2 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-container-id-2 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-container-id-2 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-container-id-2 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-container-id-2 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-container-id-2 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: \"▾\";}#sk-container-id-2 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-2 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-2 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-container-id-2 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-container-id-2 div.sk-estimator:hover {background-color: #d4ebff;}#sk-container-id-2 div.sk-parallel-item::after {content: \"\";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-container-id-2 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-2 div.sk-serial::before {content: \"\";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 0;bottom: 0;left: 50%;z-index: 0;}#sk-container-id-2 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;position: relative;}#sk-container-id-2 div.sk-item {position: relative;z-index: 1;}#sk-container-id-2 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;position: relative;}#sk-container-id-2 div.sk-item::before, #sk-container-id-2 div.sk-parallel-item::before {content: \"\";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 0;bottom: 0;left: 50%;z-index: -1;}#sk-container-id-2 div.sk-parallel-item {display: flex;flex-direction: column;z-index: 1;position: relative;background-color: white;}#sk-container-id-2 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-container-id-2 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-container-id-2 div.sk-parallel-item:only-child::after {width: 0;}#sk-container-id-2 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;}#sk-container-id-2 div.sk-label label {font-family: monospace;font-weight: bold;display: inline-block;line-height: 1.2em;}#sk-container-id-2 div.sk-label-container {text-align: center;}#sk-container-id-2 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-container-id-2 div.sk-text-repr-fallback {display: none;}</style><div id=\"sk-container-id-2\" class=\"sk-top-container\"><div class=\"sk-text-repr-fallback\"><pre>LogisticRegression(C=10, max_iter=300, multi_class=&#x27;multinomial&#x27;)</pre><b>In a Jupyter environment, please rerun this cell to show the HTML representation or trust the notebook. <br />On GitHub, the HTML representation is unable to render, please try loading this page with nbviewer.org.</b></div><div class=\"sk-container\" hidden><div class=\"sk-item\"><div class=\"sk-estimator sk-toggleable\"><input class=\"sk-toggleable__control sk-hidden--visually\" id=\"sk-estimator-id-2\" type=\"checkbox\" checked><label for=\"sk-estimator-id-2\" class=\"sk-toggleable__label sk-toggleable__label-arrow\">LogisticRegression</label><div class=\"sk-toggleable__content\"><pre>LogisticRegression(C=10, max_iter=300, multi_class=&#x27;multinomial&#x27;)</pre></div></div></div></div></div>"]},"metadata":{},"execution_count":24}],"source":["# Fit logistic regression with pol 2 kernel\n","poly2 = PolynomialFeatures(degree=2)\n","df_train_pol2 = poly2.fit_transform(df_train.loc[:, df_train.columns != 'Exited'])\n","log_pol2 = LogisticRegression(C=10, class_weight=None, dual=False, fit_intercept=True,intercept_scaling=1, max_iter=300, multi_class='multinomial', n_jobs=None,\n","                              penalty='l2', random_state=None, solver='lbfgs',tol=0.0001, verbose=0, warm_start=False)\n","log_pol2.fit(df_train_pol2,df_train.Exited)"]},{"cell_type":"code","execution_count":null,"id":"b998f7c2","metadata":{"id":"b998f7c2","outputId":"021e81ba-72d9-4b67-8001-d93b8db561e9","colab":{"base_uri":"https://localhost:8080/","height":74},"executionInfo":{"status":"ok","timestamp":1692027989170,"user_tz":-330,"elapsed":37755,"user":{"displayName":"Bijivemula chandra Mohan reddy","userId":"12901537189724530327"}}},"outputs":[{"output_type":"execute_result","data":{"text/plain":["SVC(C=100, gamma=0.1, probability=True)"],"text/html":["<style>#sk-container-id-3 {color: black;background-color: white;}#sk-container-id-3 pre{padding: 0;}#sk-container-id-3 div.sk-toggleable {background-color: white;}#sk-container-id-3 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-container-id-3 label.sk-toggleable__label-arrow:before {content: \"▸\";float: left;margin-right: 0.25em;color: #696969;}#sk-container-id-3 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-container-id-3 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-container-id-3 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-container-id-3 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-container-id-3 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-container-id-3 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: \"▾\";}#sk-container-id-3 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-3 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-3 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-container-id-3 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-container-id-3 div.sk-estimator:hover {background-color: #d4ebff;}#sk-container-id-3 div.sk-parallel-item::after {content: \"\";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-container-id-3 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-3 div.sk-serial::before {content: \"\";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 0;bottom: 0;left: 50%;z-index: 0;}#sk-container-id-3 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;position: relative;}#sk-container-id-3 div.sk-item {position: relative;z-index: 1;}#sk-container-id-3 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;position: relative;}#sk-container-id-3 div.sk-item::before, #sk-container-id-3 div.sk-parallel-item::before {content: \"\";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 0;bottom: 0;left: 50%;z-index: -1;}#sk-container-id-3 div.sk-parallel-item {display: flex;flex-direction: column;z-index: 1;position: relative;background-color: white;}#sk-container-id-3 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-container-id-3 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-container-id-3 div.sk-parallel-item:only-child::after {width: 0;}#sk-container-id-3 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;}#sk-container-id-3 div.sk-label label {font-family: monospace;font-weight: bold;display: inline-block;line-height: 1.2em;}#sk-container-id-3 div.sk-label-container {text-align: center;}#sk-container-id-3 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-container-id-3 div.sk-text-repr-fallback {display: none;}</style><div id=\"sk-container-id-3\" class=\"sk-top-container\"><div class=\"sk-text-repr-fallback\"><pre>SVC(C=100, gamma=0.1, probability=True)</pre><b>In a Jupyter environment, please rerun this cell to show the HTML representation or trust the notebook. <br />On GitHub, the HTML representation is unable to render, please try loading this page with nbviewer.org.</b></div><div class=\"sk-container\" hidden><div class=\"sk-item\"><div class=\"sk-estimator sk-toggleable\"><input class=\"sk-toggleable__control sk-hidden--visually\" id=\"sk-estimator-id-3\" type=\"checkbox\" checked><label for=\"sk-estimator-id-3\" class=\"sk-toggleable__label sk-toggleable__label-arrow\">SVC</label><div class=\"sk-toggleable__content\"><pre>SVC(C=100, gamma=0.1, probability=True)</pre></div></div></div></div></div>"]},"metadata":{},"execution_count":25}],"source":["# Fit SVM with RBF Kernel\n","SVM_RBF = SVC(C=100, cache_size=200, class_weight=None, coef0=0.0, decision_function_shape='ovr', degree=3, gamma=0.1, kernel='rbf', max_iter=-1, probability=True,\n","              random_state=None, shrinking=True,tol=0.001, verbose=False)\n","SVM_RBF.fit(df_train.loc[:, df_train.columns != 'Exited'],df_train.Exited)"]},{"cell_type":"code","execution_count":null,"id":"3baa0928","metadata":{"id":"3baa0928","outputId":"9f61e595-fb55-4fc6-e42e-a18426040e81","colab":{"base_uri":"https://localhost:8080/","height":74},"executionInfo":{"status":"ok","timestamp":1692028000259,"user_tz":-330,"elapsed":11092,"user":{"displayName":"Bijivemula chandra Mohan reddy","userId":"12901537189724530327"}}},"outputs":[{"output_type":"execute_result","data":{"text/plain":["SVC(C=100, degree=2, gamma=0.1, kernel='poly', probability=True)"],"text/html":["<style>#sk-container-id-4 {color: black;background-color: white;}#sk-container-id-4 pre{padding: 0;}#sk-container-id-4 div.sk-toggleable {background-color: white;}#sk-container-id-4 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-container-id-4 label.sk-toggleable__label-arrow:before {content: \"▸\";float: left;margin-right: 0.25em;color: #696969;}#sk-container-id-4 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-container-id-4 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-container-id-4 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-container-id-4 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-container-id-4 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-container-id-4 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: \"▾\";}#sk-container-id-4 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-4 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-4 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-container-id-4 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-container-id-4 div.sk-estimator:hover {background-color: #d4ebff;}#sk-container-id-4 div.sk-parallel-item::after {content: \"\";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-container-id-4 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-4 div.sk-serial::before {content: \"\";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 0;bottom: 0;left: 50%;z-index: 0;}#sk-container-id-4 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;position: relative;}#sk-container-id-4 div.sk-item {position: relative;z-index: 1;}#sk-container-id-4 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;position: relative;}#sk-container-id-4 div.sk-item::before, #sk-container-id-4 div.sk-parallel-item::before {content: \"\";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 0;bottom: 0;left: 50%;z-index: -1;}#sk-container-id-4 div.sk-parallel-item {display: flex;flex-direction: column;z-index: 1;position: relative;background-color: white;}#sk-container-id-4 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-container-id-4 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-container-id-4 div.sk-parallel-item:only-child::after {width: 0;}#sk-container-id-4 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;}#sk-container-id-4 div.sk-label label {font-family: monospace;font-weight: bold;display: inline-block;line-height: 1.2em;}#sk-container-id-4 div.sk-label-container {text-align: center;}#sk-container-id-4 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-container-id-4 div.sk-text-repr-fallback {display: none;}</style><div id=\"sk-container-id-4\" class=\"sk-top-container\"><div class=\"sk-text-repr-fallback\"><pre>SVC(C=100, degree=2, gamma=0.1, kernel=&#x27;poly&#x27;, probability=True)</pre><b>In a Jupyter environment, please rerun this cell to show the HTML representation or trust the notebook. <br />On GitHub, the HTML representation is unable to render, please try loading this page with nbviewer.org.</b></div><div class=\"sk-container\" hidden><div class=\"sk-item\"><div class=\"sk-estimator sk-toggleable\"><input class=\"sk-toggleable__control sk-hidden--visually\" id=\"sk-estimator-id-4\" type=\"checkbox\" checked><label for=\"sk-estimator-id-4\" class=\"sk-toggleable__label sk-toggleable__label-arrow\">SVC</label><div class=\"sk-toggleable__content\"><pre>SVC(C=100, degree=2, gamma=0.1, kernel=&#x27;poly&#x27;, probability=True)</pre></div></div></div></div></div>"]},"metadata":{},"execution_count":26}],"source":["# Fit SVM with Pol Kernel\n","SVM_POL = SVC(C=100, cache_size=200, class_weight=None, coef0=0.0,  decision_function_shape='ovr', degree=2, gamma=0.1, kernel='poly',  max_iter=-1,\n","              probability=True, random_state=None, shrinking=True, tol=0.001, verbose=False)\n","SVM_POL.fit(df_train.loc[:, df_train.columns != 'Exited'],df_train.Exited)"]},{"cell_type":"code","execution_count":null,"id":"94c6f618","metadata":{"id":"94c6f618","outputId":"5cdb7de6-583c-4cd6-ca7a-38cf7977e252","colab":{"base_uri":"https://localhost:8080/","height":282},"executionInfo":{"status":"ok","timestamp":1692028000259,"user_tz":-330,"elapsed":23,"user":{"displayName":"Bijivemula chandra Mohan reddy","userId":"12901537189724530327"}}},"outputs":[{"output_type":"stream","name":"stdout","text":["[15:46:45] WARNING: ../src/learner.cc:767: \n","Parameters: { \"silent\" } are not used.\n","\n"]},{"output_type":"execute_result","data":{"text/plain":["XGBClassifier(base_score=0.5, booster='gbtree', callbacks=None,\n","              colsample_bylevel=1, colsample_bynode=None, colsample_bytree=1,\n","              early_stopping_rounds=None, enable_categorical=False,\n","              eval_metric=None, feature_types=None, gamma=0.01, gpu_id=None,\n","              grow_policy=None, importance_type=None,\n","              interaction_constraints=None, learning_rate=0.1, max_bin=None,\n","              max_cat_threshold=None, max_cat_to_onehot=None, max_delta_step=0,\n","              max_depth=7, max_leaves=None, min_child_weight=5, missing=None,\n","              monotone_constraints=None, n_estimators=20, n_jobs=1,\n","              nthread=None, num_parallel_tree=None, predictor=None, ...)"],"text/html":["<style>#sk-container-id-5 {color: black;background-color: white;}#sk-container-id-5 pre{padding: 0;}#sk-container-id-5 div.sk-toggleable {background-color: white;}#sk-container-id-5 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-container-id-5 label.sk-toggleable__label-arrow:before {content: \"▸\";float: left;margin-right: 0.25em;color: #696969;}#sk-container-id-5 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-container-id-5 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-container-id-5 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-container-id-5 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-container-id-5 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-container-id-5 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: \"▾\";}#sk-container-id-5 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-5 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-5 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-container-id-5 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-container-id-5 div.sk-estimator:hover {background-color: #d4ebff;}#sk-container-id-5 div.sk-parallel-item::after {content: \"\";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-container-id-5 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-5 div.sk-serial::before {content: \"\";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 0;bottom: 0;left: 50%;z-index: 0;}#sk-container-id-5 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;position: relative;}#sk-container-id-5 div.sk-item {position: relative;z-index: 1;}#sk-container-id-5 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;position: relative;}#sk-container-id-5 div.sk-item::before, #sk-container-id-5 div.sk-parallel-item::before {content: \"\";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 0;bottom: 0;left: 50%;z-index: -1;}#sk-container-id-5 div.sk-parallel-item {display: flex;flex-direction: column;z-index: 1;position: relative;background-color: white;}#sk-container-id-5 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-container-id-5 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-container-id-5 div.sk-parallel-item:only-child::after {width: 0;}#sk-container-id-5 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;}#sk-container-id-5 div.sk-label label {font-family: monospace;font-weight: bold;display: inline-block;line-height: 1.2em;}#sk-container-id-5 div.sk-label-container {text-align: center;}#sk-container-id-5 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-container-id-5 div.sk-text-repr-fallback {display: none;}</style><div id=\"sk-container-id-5\" class=\"sk-top-container\"><div class=\"sk-text-repr-fallback\"><pre>XGBClassifier(base_score=0.5, booster=&#x27;gbtree&#x27;, callbacks=None,\n","              colsample_bylevel=1, colsample_bynode=None, colsample_bytree=1,\n","              early_stopping_rounds=None, enable_categorical=False,\n","              eval_metric=None, feature_types=None, gamma=0.01, gpu_id=None,\n","              grow_policy=None, importance_type=None,\n","              interaction_constraints=None, learning_rate=0.1, max_bin=None,\n","              max_cat_threshold=None, max_cat_to_onehot=None, max_delta_step=0,\n","              max_depth=7, max_leaves=None, min_child_weight=5, missing=None,\n","              monotone_constraints=None, n_estimators=20, n_jobs=1,\n","              nthread=None, num_parallel_tree=None, predictor=None, ...)</pre><b>In a Jupyter environment, please rerun this cell to show the HTML representation or trust the notebook. <br />On GitHub, the HTML representation is unable to render, please try loading this page with nbviewer.org.</b></div><div class=\"sk-container\" hidden><div class=\"sk-item\"><div class=\"sk-estimator sk-toggleable\"><input class=\"sk-toggleable__control sk-hidden--visually\" id=\"sk-estimator-id-5\" type=\"checkbox\" checked><label for=\"sk-estimator-id-5\" class=\"sk-toggleable__label sk-toggleable__label-arrow\">XGBClassifier</label><div class=\"sk-toggleable__content\"><pre>XGBClassifier(base_score=0.5, booster=&#x27;gbtree&#x27;, callbacks=None,\n","              colsample_bylevel=1, colsample_bynode=None, colsample_bytree=1,\n","              early_stopping_rounds=None, enable_categorical=False,\n","              eval_metric=None, feature_types=None, gamma=0.01, gpu_id=None,\n","              grow_policy=None, importance_type=None,\n","              interaction_constraints=None, learning_rate=0.1, max_bin=None,\n","              max_cat_threshold=None, max_cat_to_onehot=None, max_delta_step=0,\n","              max_depth=7, max_leaves=None, min_child_weight=5, missing=None,\n","              monotone_constraints=None, n_estimators=20, n_jobs=1,\n","              nthread=None, num_parallel_tree=None, predictor=None, ...)</pre></div></div></div></div></div>"]},"metadata":{},"execution_count":27}],"source":["# Fit Extreme Gradient Boost Classifier\n","XGB = XGBClassifier(base_score=0.5, booster='gbtree', colsample_bylevel=1,colsample_bytree=1, gamma=0.01, learning_rate=0.1, max_delta_step=0,max_depth=7,\n","                    min_child_weight=5, missing=None, n_estimators=20,n_jobs=1, nthread=None, objective='binary:logistic', random_state=0,reg_alpha=0,\n","                    reg_lambda=1, scale_pos_weight=1, seed=None, silent=True, subsample=1)\n","XGB.fit(df_train.loc[:, df_train.columns != 'Exited'],df_train.Exited)"]},{"cell_type":"code","execution_count":null,"id":"4afa056d","metadata":{"id":"4afa056d","outputId":"f462685d-9633-4c92-f0de-8fa1666bad40","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1692028000260,"user_tz":-330,"elapsed":21,"user":{"displayName":"Bijivemula chandra Mohan reddy","userId":"12901537189724530327"}}},"outputs":[{"output_type":"stream","name":"stdout","text":["              precision    recall  f1-score   support\n","\n","           0       0.80      0.98      0.88      6353\n","           1       0.40      0.04      0.08      1647\n","\n","    accuracy                           0.79      8000\n","   macro avg       0.60      0.51      0.48      8000\n","weighted avg       0.72      0.79      0.72      8000\n","\n"]}],"source":["print(classification_report(df_train.Exited, log_primal.predict(df_train.loc[:, df_train.columns != 'Exited'])))"]},{"cell_type":"code","execution_count":null,"id":"2f58d551","metadata":{"id":"2f58d551","outputId":"8ab05533-4a9b-46e7-91dd-d4154b29ab1f","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1692028000260,"user_tz":-330,"elapsed":19,"user":{"displayName":"Bijivemula chandra Mohan reddy","userId":"12901537189724530327"}}},"outputs":[{"output_type":"stream","name":"stdout","text":["              precision    recall  f1-score   support\n","\n","           0       0.85      0.96      0.90      6353\n","           1       0.72      0.34      0.46      1647\n","\n","    accuracy                           0.84      8000\n","   macro avg       0.78      0.65      0.68      8000\n","weighted avg       0.82      0.84      0.81      8000\n","\n"]}],"source":["print(classification_report(df_train.Exited,  log_pol2.predict(df_train_pol2)))"]},{"cell_type":"code","execution_count":null,"id":"a13731ff","metadata":{"id":"a13731ff","outputId":"387d09ee-952b-46f3-f0d2-f0b4beb2d355","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1692028001845,"user_tz":-330,"elapsed":1601,"user":{"displayName":"Bijivemula chandra Mohan reddy","userId":"12901537189724530327"}}},"outputs":[{"output_type":"stream","name":"stdout","text":["              precision    recall  f1-score   support\n","\n","           0       0.81      0.99      0.90      6353\n","           1       0.85      0.13      0.22      1647\n","\n","    accuracy                           0.82      8000\n","   macro avg       0.83      0.56      0.56      8000\n","weighted avg       0.82      0.82      0.76      8000\n","\n"]}],"source":["print(classification_report(df_train.Exited,  SVM_RBF.predict(df_train.loc[:, df_train.columns != 'Exited'])))"]},{"cell_type":"code","execution_count":null,"id":"cc2d6981","metadata":{"id":"cc2d6981","outputId":"dcf71e09-9ea5-4c52-a620-b37f21d64805","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1692028003724,"user_tz":-330,"elapsed":990,"user":{"displayName":"Bijivemula chandra Mohan reddy","userId":"12901537189724530327"}}},"outputs":[{"output_type":"stream","name":"stdout","text":["              precision    recall  f1-score   support\n","\n","           0       0.81      0.99      0.90      6353\n","           1       0.86      0.13      0.22      1647\n","\n","    accuracy                           0.82      8000\n","   macro avg       0.83      0.56      0.56      8000\n","weighted avg       0.82      0.82      0.76      8000\n","\n"]}],"source":["print(classification_report(df_train.Exited,  SVM_POL.predict(df_train.loc[:, df_train.columns != 'Exited'])))"]},{"cell_type":"code","execution_count":null,"id":"b0c29be8","metadata":{"id":"b0c29be8","outputId":"eff86075-9b35-4804-86b7-bbd87d0c8569","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1692028002740,"user_tz":-330,"elapsed":900,"user":{"displayName":"Bijivemula chandra Mohan reddy","userId":"12901537189724530327"}}},"outputs":[{"output_type":"stream","name":"stdout","text":["CreditScore            0\n","Age                    0\n","Tenure                 0\n","Balance                0\n","NumOfProducts          0\n","EstimatedSalary        0\n","TenureByAge            0\n","CreditScoreGivenAge    0\n","dtype: int64\n","AUC Score: 0.876442206928901\n","Classification Report:\n","              precision    recall  f1-score   support\n","\n","           0       0.94      0.99      0.97      6353\n","           1       0.96      0.76      0.85      1647\n","\n","    accuracy                           0.94      8000\n","   macro avg       0.95      0.88      0.91      8000\n","weighted avg       0.94      0.94      0.94      8000\n","\n"]}],"source":["y = df_train.Exited\n","X = df_train.loc[:, df_train.columns != 'Exited']\n","\n","# Check for missing values in X\n","print(X.isnull().sum())  # Check if there are any missing values in X\n","\n","# Handle missing values using imputation (replace missing values with the mean)\n","imputer = SimpleImputer(strategy='mean')\n","X_imputed = imputer.fit_transform(X)\n","\n","# Convert the imputed array back to a DataFrame\n","X_imputed = pd.DataFrame(X_imputed, columns=X.columns)\n","\n","# Now make predictions using the XGBoost model\n","xgb_model = XGBClassifier()\n","xgb_model.fit(X_imputed, y)\n","\n","# Make predictions and calculate AUC scores\n","predictions = xgb_model.predict(X_imputed)\n","proba_predictions = xgb_model.predict_proba(X_imputed)[:, 1]\n","\n","# Calculate AUC scores and classification report\n","auc_score, fpr, tpr = get_auc_scores(y, predictions, proba_predictions)\n","print(\"AUC Score:\", auc_score)\n","print(\"Classification Report:\")\n","print(classification_report(y, predictions))"]},{"cell_type":"code","execution_count":null,"id":"20a406cb","metadata":{"id":"20a406cb","outputId":"f76d044d-5ed1-4a86-f7dc-27e9770ad3ca","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1692028003725,"user_tz":-330,"elapsed":9,"user":{"displayName":"Bijivemula chandra Mohan reddy","userId":"12901537189724530327"}}},"outputs":[{"output_type":"stream","name":"stderr","text":["<ipython-input-20-941607351b30>:20: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame.\n","Try using .loc[row_indexer,col_indexer] = value instead\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  df_predict[i+'_'+j] = np.where(df_predict[i] == j,1,-1)\n","<ipython-input-20-941607351b30>:20: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame.\n","Try using .loc[row_indexer,col_indexer] = value instead\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  df_predict[i+'_'+j] = np.where(df_predict[i] == j,1,-1)\n","<ipython-input-20-941607351b30>:20: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame.\n","Try using .loc[row_indexer,col_indexer] = value instead\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  df_predict[i+'_'+j] = np.where(df_predict[i] == j,1,-1)\n","<ipython-input-20-941607351b30>:20: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame.\n","Try using .loc[row_indexer,col_indexer] = value instead\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  df_predict[i+'_'+j] = np.where(df_predict[i] == j,1,-1)\n","<ipython-input-20-941607351b30>:20: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame.\n","Try using .loc[row_indexer,col_indexer] = value instead\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  df_predict[i+'_'+j] = np.where(df_predict[i] == j,1,-1)\n"]},{"output_type":"execute_result","data":{"text/plain":["(0, 9)"]},"metadata":{},"execution_count":33}],"source":["# Make the data transformation for test data\n","df_test = DfPrepPipeline(df_test,df_train.columns,minVec,maxVec)\n","df_test = df_test.mask(np.isinf(df_test))\n","df_test = df_test.dropna()\n","df_test.shape"]},{"cell_type":"code","execution_count":null,"id":"e938e63f","metadata":{"id":"e938e63f","outputId":"b6e87e0a-0460-4ace-d6f5-6b3b0a7af6d3","colab":{"base_uri":"https://localhost:8080/","height":472},"executionInfo":{"status":"ok","timestamp":1692028004860,"user_tz":-330,"elapsed":1140,"user":{"displayName":"Bijivemula chandra Mohan reddy","userId":"12901537189724530327"}}},"outputs":[{"output_type":"display_data","data":{"text/plain":["<Figure size 640x480 with 1 Axes>"],"image/png":"\n"},"metadata":{}}],"source":["plt.plot([0,1], [0,1], 'k--', label = 'Random: 0.5')\n","plt.xlabel('False positive rate')\n","plt.ylabel('True positive rate')\n","plt.title('ROC Curve')\n","plt.legend(loc='best')\n","#plt.savefig('roc_results_ratios.png')\n","plt.show()"]},{"cell_type":"code","execution_count":null,"id":"19160c59","metadata":{"id":"19160c59"},"outputs":[],"source":[]}],"metadata":{"kernelspec":{"display_name":"Python 3 (ipykernel)","language":"python","name":"python3"},"language_info":{"codemirror_mode":{"name":"ipython","version":3},"file_extension":".py","mimetype":"text/x-python","name":"python","nbconvert_exporter":"python","pygments_lexer":"ipython3","version":"3.9.7"},"colab":{"provenance":[{"file_id":"1sKBiny6zKx1vwwMmPBkmBmDRalIpyu9l","timestamp":1692095444653}]}},"nbformat":4,"nbformat_minor":5}